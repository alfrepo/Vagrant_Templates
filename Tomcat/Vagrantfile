# -*- mode: ruby -*-
# vi: set ft=ruby :

# The project to control the maschiene in the cloud via Ansible.

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
	# The most common configuration options are documented and commented below.
	# For a complete reference, please see the online documentation at
	# https://docs.vagrantup.com.

	# Every Vagrant development environment requires a box. You can search for
	# boxes at https://vagrantcloud.com/search.
	config.vm.box = "boxcutter/ubuntu1604"

	# The url from where the 'config.vm.box' box will be fetched if it
	# doesn't already exist on the user's system.
	config.vm.box_url = "https://app.vagrantup.com/boxcutter/boxes/ubuntu1604"
	

	# memory increase
	config.vm.provider "virtualbox" do |v|
        v.memory = 4964
        v.cpus = 4
    end
					  
	USERNAME="user"
	PASSWORD="password"
	PATH_VAGRANT_PROJECT=File.dirname(__FILE__)

	# all files here will be added to home
	config.vm.synced_folder "#{PATH_VAGRANT_PROJECT}\\vagrant-home\\", "//root/vagrant-home/"
	
	
	# forward ports
	config.vm.network :forwarded_port, guest: 80, host: 8092
	config.vm.network :forwarded_port, guest: 81, host: 8093

	

	###############
	#####  LOCAL PROVISIONERS INSTEAD OF DOWNLOAD
	
  
	# Use shell script to provision
	config.vm.provision "shell", inline: <<-SHELL
			
	
		# update
		apt-get update	
	
		
		###############
		##### DOCKER
		
		# install docker
		apt-get -y install docker.io
		
		# run tomcat
		docker run -d --restart=always --name tomcat8 -p 80:8080 -p 81:8081 tomcat:8.0-jre8
		
		# enable tomcat/tomcat 
		
		# remove </tomcat-users>
		docker exec tomcat8 sed -i '$ d' /usr/local/tomcat/conf/tomcat-users.xml
		
		#define a role
		docker exec tomcat8 bash -c "echo -e '<role rolename=\\"manager-gui\\"/>' >> /usr/local/tomcat/conf/tomcat-users.xml"
		docker exec tomcat8 bash -c "echo -e '<user username=\\"#{USERNAME}\\" password=\\"#{PASSWORD}\\" roles=\\"manager-gui\\" />' >> /usr/local/tomcat/conf/tomcat-users.xml"
		docker exec tomcat8 bash -c "echo -e '</tomcat-users>' >> /usr/local/tomcat/conf/tomcat-users.xml"

		docker restart tomcat8
		
	SHELL
  
end
